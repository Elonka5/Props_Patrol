{"version":3,"file":"static/js/969.52302aab.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/FormError/FormError.jsx","hooks/usePasswordToggle.js","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","services/validation/validationRegisterSchema.js","webpack://react-homework-template/./src/components/TogglePasswordVisibility/TogglePasswordVisibility.module.css?84ab","components/TogglePasswordVisibility/TogglePasswordVisibility.jsx","components/IndicatorPasswordStrenght/IndicatorPasswordStrenght.styled.js","components/IndicatorPasswordStrenght/IndicatorPasswordStrenght.jsx","hooks/usePasswordStrength.js","components/ConfirmPasswordIndicator/ConfirmPasswordIndicator.styled.js","components/ConfirmPasswordIndicator/ConfirmPasswordIndicator.jsx","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/pages/Registration/Registration.module.css?f330","pages/Registration/Registration.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// import css from './Button.module.css';\n\nexport const Button = ({\n  onClick = null,\n  text,\n  type = 'button',\n  variant = 'primary',\n}) => {\n  return (\n    <button type={type} onClick={onClick} variant={variant}>\n      {text}\n    </button>\n  );\n};\nButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n};\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p>{message}</p>}\n    ></ErrorMessage>\n  );\n};\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\n\nexport function usePasswordToggle(fields = []) {\n  const initialState = fields.reduce((acc, field) => {\n    acc[field] = false;\n    return acc;\n  }, {});\n\n  const [showPasswords, setShowPasswords] = useState(initialState);\n\n  const togglePasswordVisibility = field => {\n    setShowPasswords(prevState => ({\n      ...prevState,\n      [field]: !prevState[field],\n    }));\n  };\n\n  return { showPasswords, togglePasswordVisibility };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"registerform\":\"RegisterForm_registerform__romRc\"};","import * as yup from 'yup';\n\nexport const registerSchema = yup.object().shape({\n  username: yup\n    .string()\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .max(30, 'the name must contain a maximum of 30 characters'),\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .max(30, 'the name must contain a maximum of 30 characters'),\n  password: yup\n    .string()\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .min(6, 'Password must contain at least 6 characters')\n    .max(12, 'Password must contain a maximum of 12 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d|.*[!@#$%^&*()_+\\-=.<>])[a-zA-Z\\d!@#$%^&*()_+\\-=.<>]{6,12}$/,\n      'Password must contain at least one uppercase letter, one lowercase letter and one number'\n    ),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Confirm Password is required'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"passwordicon\":\"TogglePasswordVisibility_passwordicon__tBhTs\"};","import { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport css from './TogglePasswordVisibility.module.css';\n\nexport const TogglePasswordIcon = ({ showPassword, onToggle }) => {\n  return (\n    <div className={css.passwordicon}>\n      {showPassword ? (\n        <FaEye onClick={onToggle} />\n      ) : (\n        <FaEyeSlash onClick={onToggle} />\n      )}\n    </div>\n  );\n};\n\nTogglePasswordIcon.propTypes = {\n  showPassword: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n","import styled, { css, keyframes } from 'styled-components';\n\nconst passwordStrengthAnimation = keyframes`\n  from {\n    width: 0%;\n    background-color: transparent;\n  }\n  to {\n    width:100%;\n    background-color: ${props => props.color};\n  }\n`;\n\nexport const PasswordStrengthIndicator = styled.div`\n  width: 100%;\n  height: 3px;\n  background-color: transparent;\n  border-radius: 5px;\n  animation: ${passwordStrengthAnimation} 0.5s ease;\n  width: ${props => props.width};\n  background-color: ${props => props.color};\n  transition: all 0.4s ease-out;\n  ${props => css`\n    background-color: ${props.color};\n  `};\n`;\n\nexport const PasswordStrengthText = styled.p`\n  margin-top: 5px;\n  color: ${props => props.color};\n  font-size: 14px;\n  font-weight: bold;\n`;\n","import PropTypes from 'prop-types';\nimport { usePasswordStrength } from 'hooks/usePasswordStrength';\nimport {\n  PasswordStrengthIndicator,\n  PasswordStrengthText,\n} from './IndicatorPasswordStrenght.styled';\n\nexport const IndicatorPasswordStrenght = ({ values }) => {\n  const {\n    getPasswordStrengthWidth,\n    getPasswordStrengthColor,\n    getPasswordStrengthText,\n  } = usePasswordStrength();\n\n  return (\n    <>\n      <PasswordStrengthIndicator\n        width={getPasswordStrengthWidth(values.password)}\n        color={getPasswordStrengthColor(values.password)}\n      />\n      <PasswordStrengthText color={getPasswordStrengthColor(values.password)}>\n        {getPasswordStrengthText(values.password)}\n      </PasswordStrengthText>\n    </>\n  );\n};\n\nIndicatorPasswordStrenght.propTypes = {\n  values: PropTypes.shape({\n    password: PropTypes.string,\n  }).isRequired,\n};\n","export const usePasswordStrength = () => {\n  const getPasswordStrengthWidth = password => {\n    const maxLength = 10;\n    const passwordLength = password?.length || 0;\n    const strengthPercentage = (passwordLength / maxLength) * 100;\n    return `${Math.min(strengthPercentage, 100)}%`;\n  };\n\n  const getPasswordStrengthColor = password => {\n    const passwordStrengthRanges = [\n      { length: 1, color: '#FD450B' },\n      { length: 3, color: '#FF6231' },\n      { length: 4, color: '#F37952' },\n      { length: 5, color: '#FC675D' },\n      { length: 6, color: '#F6C881' },\n      { length: 7, color: '#FBEC67' },\n      { length: 8, color: '#F8E32B' },\n      { length: 9, color: '#CAF98F' },\n      { length: 10, color: '#52E54F' },\n      { length: Infinity, color: '#099E06' }, // Для довжини більше 10\n    ];\n\n    const { color } = passwordStrengthRanges.find(\n      range => password?.length <= range.length\n    ) || {\n      color: 'transparent',\n    };\n    return color;\n  };\n\n  const getPasswordStrengthText = password => {\n    const passwordStrengthRanges = [\n      { min: 2, max: 6, text: 'Weak Password' },\n      { min: 7, max: 10, text: 'Medium Strength Password' },\n      { min: 11, max: Infinity, text: 'Strong Password' },\n    ];\n\n    const { text } = passwordStrengthRanges.find(\n      range => password?.length >= range.min && password?.length <= range.max\n    ) || { text: '' };\n\n    return text;\n  };\n\n  return {\n    getPasswordStrengthWidth,\n    getPasswordStrengthColor,\n    getPasswordStrengthText,\n  };\n};\n","import styled from 'styled-components';\n\nexport const IndicatorWrapper = styled.div`\n  height: 3px;\n  background-color: ${props => (props.passwordsMatch ? 'green' : 'red')};\n  transition: all 0.4s ease-out;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { IndicatorWrapper } from './ConfirmPasswordIndicator.styled';\n\nexport const ConfirmPasswordIndicator = ({\n  passwordsMatch,\n  values: { confirmPassword },\n}) => {\n  const width = passwordsMatch ? '100%' : '50%';\n  return (\n    confirmPassword && (\n      <IndicatorWrapper passwordsMatch={passwordsMatch} style={{ width }} />\n    )\n  );\n};\n\nConfirmPasswordIndicator.propTypes = {\n  passwordsMatch: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport css from './RegisterForm.module.css';\nimport { signUpThunk } from 'redux/authOperations';\nimport { toast } from 'react-toastify';\nimport { ErrorMessage, Formik, useFormikContext } from 'formik';\nimport { registerSchema } from 'services/validation/validationRegisterSchema';\nimport { TogglePasswordIcon } from 'components/TogglePasswordVisibility/TogglePasswordVisibility';\nimport { IndicatorPasswordStrenght } from 'components/IndicatorPasswordStrenght/IndicatorPasswordStrenght';\nimport { FormError } from 'components/FormError/FormError';\nimport { ConfirmPasswordIndicator } from 'components/ConfirmPasswordIndicator/ConfirmPasswordIndicator';\nimport { Button } from 'components/Button/Button';\nimport { Link } from 'react-router-dom';\nimport { usePasswordToggle } from 'hooks/usePasswordToggle';\n\nconst RegisterForm = () => {\n  const { showPasswords, togglePasswordVisibility } = usePasswordToggle([\n    'password1',\n    'password2',\n  ]);\n\n  const dispatch = useDispatch();\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const handleSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n    dispatch(signUpThunk({ email, password }))\n      .unwrap()\n      .then(data => {\n        resetForm();\n        toast.success(\n          `${data.user.username}, thanks for signing up. Welcome to Money Guard! We are happy to have you on board.`\n        );\n      })\n      .catch(error => {\n        toast.error(error.message);\n      });\n    resetForm();\n  };\n  const formik = useFormikContext();\n  return (\n    <div className={css.registerform}>\n      <Formik\n        initialValues={initialValues}\n        registerSchema={registerSchema}\n        onSubmit={handleSubmit}\n      >\n        <form autoComplete=\"off\">\n          <div>\n            <div>\n              <input\n                type=\"text\"\n                name=\"username\"\n                autoComplete=\"off\"\n                placeholder=\"First name\"\n                required\n              />\n            </div>\n            <TogglePasswordIcon\n              showPassword={showPasswords.password1}\n              onToggle={() => togglePasswordVisibility('password1')}\n            />\n            <IndicatorPasswordStrenght password={formik.values.password} />\n            <ErrorMessage name=\"password\" component={FormError} />\n            <div>\n              <div>\n                <input\n                  type={showPasswords.password2 ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  title=\"Enter the password more difficult, letter, digit, capital letter.\"\n                  placeholder=\"Confirm Password\"\n                  autoComplete=\"off\"\n                  required\n                />\n              </div>\n              <TogglePasswordIcon\n                showPassword={showPasswords.password2}\n                onToggle={() => togglePasswordVisibility('password2')}\n              />\n            </div>\n            <ConfirmPasswordIndicator\n              password={formik.values.password}\n              confirmPassword={formik.values.confirmPassword}\n            />\n            <ErrorMessage name=\"confirmPassword\" component={FormError} />\n          </div>\n          <div>\n            <Button type=\"submit\" text=\"register\" />\n            <Link to=\"/login\">Log in</Link>\n          </div>\n        </form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"registercontaner\":\"Registration_registercontaner__8dqM+\"};","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport css from './Registration.module.css';\n// import { Formik } from 'formik';\n\nconst Registration = () => {\n  return (\n    <div className={css.registercontaner}>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Registration;\n"],"names":["Button","onClick","text","type","variant","FormError","name","render","message","usePasswordToggle","fields","initialState","reduce","acc","field","useState","showPasswords","setShowPasswords","togglePasswordVisibility","prevState","registerSchema","yup","shape","username","test","value","trim","required","max","email","password","min","matches","confirmPassword","oneOf","TogglePasswordIcon","showPassword","onToggle","className","css","passwordStrengthAnimation","keyframes","props","color","PasswordStrengthIndicator","styled","width","PasswordStrengthText","IndicatorPasswordStrenght","values","getPasswordStrengthWidth","strengthPercentage","length","Math","getPasswordStrengthColor","Infinity","find","range","getPasswordStrengthText","IndicatorWrapper","passwordsMatch","ConfirmPasswordIndicator","style","dispatch","useDispatch","formik","useFormikContext","initialValues","onSubmit","resetForm","signUpThunk","unwrap","then","data","toast","user","catch","error","autoComplete","placeholder","password1","component","password2","title","to"],"sourceRoot":""}