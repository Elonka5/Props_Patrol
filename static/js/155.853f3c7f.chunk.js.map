{"version":3,"file":"static/js/155.853f3c7f.chunk.js","mappings":"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","sources":["assets/images/moneyGuardLogo.svg","components/Button/Button.styled.js","components/Button/Button.jsx","components/FormError/FormError.jsx","components/LoginForm/LoginForm.styled.js","components/Logo/Logo.styled.js","components/Logo/Logo.jsx","webpack://react-homework-template/./src/components/TogglePasswordVisibility/TogglePasswordVisibility.module.css?84ab","components/TogglePasswordVisibility/TogglePasswordVisibility.jsx","hooks/usePasswordToggle.js","services/validation/validationLoginSchema.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["var _path, _path2, _path3, _path4, _path5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMoneyGuardLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"MoneyGuardLogo\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffc727\",\n    d: \"M21.94 4.396c-2.263-0.566-4.526-1.698-6.223-3.397-1.697 1.698-3.96 2.83-6.223 3.397 0.566 5.095 2.263 8.491 6.223 11.322 3.96-2.831 6.223-6.227 6.223-11.322z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M19.677 25.474l-15.84-18.681v9.057l12.446 14.152 3.394-4.529z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M21.374 23.776l6.789-7.925v-8.491l-10.749 12.454 3.96 3.963z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M21.94 26.606v5.095l6.223-7.359v-5.095l-6.223 7.359z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M10.060 26.606l-6.223-7.359v5.095l6.223 7.359v-5.095z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMoneyGuardLogo);\nexport default __webpack_public_path__ + \"static/media/moneyGuardLogo.dbc52635efdf8219ee1a2f3c5f17f1d2.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  width: ${({ theme }) => theme.spacing(75)};\n  height: ${({ theme }) => theme.spacing(12.5)};\n  background: ${({ theme }) => theme.colors.btnGradient};\n  border-radius: ${({ theme }) => theme.radii.button};\n  box-shadow: ${({ theme }) => theme.shadows.secondary};\n\n  color: ${({ theme }) => theme.colors.primaryFont};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 1.8px;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  transition: transform ${({ theme }) => theme.transitions.regular};\n\n  &:focus,\n  &:hover {\n    border-radius: 18px;\n    border: 2px solid yellow;\n    transform: scale(1.01);\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n\n  /* Вариант \"primary\" */\n  ${({ variant }) =>\n    variant === 'primary' &&\n    css`\n      background: ${({ theme }) => theme.colors.btnGradient};\n    `}\n\n  /* Вариант \"secondary\" */\n  ${({ variant }) =>\n    variant === 'secondary' &&\n    css`\n      color: ${({ theme }) => theme.colors.btnVioletText};\n      background: ${({ theme }) => theme.colors.btnWhiteBg};\n      border: ${({ theme }) => theme.borders.normal};\n      border-color: ${({ theme }) => theme.colors.blue};\n    `}\n /* Вариант \"third\" */\n      ${({ variant }) =>\n    variant === 'third' &&\n    css`\n      width: ${({ theme }) => theme.spacing(17.5)};\n      height: ${({ theme }) => theme.spacing(7.5)};\n    `}\n`;\n","import PropTypes from 'prop-types';\n// import css from './Button.module.css';\n\nimport { ButtonStyled } from './Button.styled';\n\nexport const Button = ({\n  onClick = null,\n  text,\n  type = 'button',\n  variant = 'primary',\n}) => {\n  return (\n    <ButtonStyled type={type} onClick={onClick} variant={variant}>\n      {text}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n};\n\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <p>{message}</p>}\n    ></ErrorMessage>\n  );\n};\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { Field, Form } from 'formik';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\nimport { IoMdMail, IoMdLock } from 'react-icons/io';\nimport styled from 'styled-components';\n\nexport const WrapperForm = styled.div`\n  padding: 96px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n\n  @media (min-width: 320px) and (max-width: 767px) {\n    height: 100%;\n  }\n  @media (min-width: 768px) {\n    width: 533px;\n    padding: 80px 62px;\n  }\n  border-radius: ${({ theme }) => theme.radii.normal};\n  box-shadow: ${({ theme }) => theme.shadows.primary};\n  backdrop-filter: blur(60px);\n  background: rgba(0, 0, 0, 0.3);\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(10)};\n`;\n\nexport const WrapperField = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const FieldStyled = styled(Field)`\n  margin-top: 40px;\n  padding-left: 40px;\n  width: 280px;\n  height: ${({ theme }) => theme.spacing(9)};\n  outline: none;\n  border: none;\n  border-bottom: 2px solid grey;\n  background-color: rgba(255, 255, 255, 0);\n  color: grey;\n  @media (min-width: 768px) {\n    width: ${({ theme }) => theme.spacing(102)};\n  }\n  position: relative;\n  &:focus {\n    outline: none;\n    border: none;\n    border-bottom: 2px solid grey;\n  }\n`;\n\nexport const WrapperButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(5)};\n`;\n\nexport const EmailIcon = styled(IoMdMail)`\n  height: 24px;\n\n  color: grey;\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\n\nexport const WrapperIcon = styled.div`\n  position: relative;\n`;\nexport const WrapperIcon2 = styled.div`\n  position: relative;\n`;\nexport const PasswordlIcon = styled(IoMdLock)`\n  height: 24px;\n  width: 24px;\n  color: grey;\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\nexport const WrapperIcon3 = styled.div`\n  position: relative;\n`;\n\nexport const PasswordlIconLook = styled.div`\n  height: 24px;\n  width: 24px;\n  color: grey;\n  position: absolute;\n  right: 0;\n  top: 63%;\n`;\n\nexport const FaEyeStyled = styled(FaEye)`\n  cursor: pointer;\n`;\n\nexport const FaEyeSlashStyled = styled(FaEyeSlash)`\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 12px;\n`;\n\nexport const TitleLogo = styled.h2`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 19px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n\n  letter-spacing: 1.8px;\n\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    font-size: 27px;\n  }\n`;\n","import React from 'react';\nimport { TitleLogo, WrapperLogo } from './Logo.styled';\nimport moneyGuardLogo from 'assets/images/moneyGuardLogo.svg';\n\nexport const Logo = () => {\n  return (\n    <WrapperLogo>\n      <img src={moneyGuardLogo} alt=\"MoneyGuard Logo\" />\n      <TitleLogo>Money Guard</TitleLogo>\n    </WrapperLogo>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"passwordicon\":\"TogglePasswordVisibility_passwordicon__tBhTs\"};","import { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport css from './TogglePasswordVisibility.module.css';\n\nexport const TogglePasswordIcon = ({ showPassword, onToggle }) => {\n  return (\n    <div className={css.passwordicon}>\n      {showPassword ? (\n        <FaEye onClick={onToggle} />\n      ) : (\n        <FaEyeSlash onClick={onToggle} />\n      )}\n    </div>\n  );\n};\n\nTogglePasswordIcon.propTypes = {\n  showPassword: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nexport function usePasswordToggle(fields = []) {\n  const initialState = fields.reduce((acc, field) => {\n    acc[field] = false;\n    return acc;\n  }, {});\n\n  const [showPasswords, setShowPasswords] = useState(initialState);\n\n  const togglePasswordVisibility = field => {\n    setShowPasswords(prevState => ({\n      ...prevState,\n      [field]: !prevState[field],\n    }));\n  };\n\n  return { showPasswords, togglePasswordVisibility };\n}\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .max(30, 'the name must contain a maximum of 30 characters'),\n  password: yup\n    .string()\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .min(6, 'Password must contain at least 6 characters')\n    .max(12, 'Password must contain a maximum of 12 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d|.*[!@#$%^&*()_+\\-=.<>])[a-zA-Z\\d!@#$%^&*()_+\\-=.<>]{6,12}$/,\n      'Password must contain at least one uppercase letter, one lowercase letter and one number'\n    ),\n});\n","import { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { loginSchema } from 'services/validation/validationLoginSchema';\nimport { usePasswordToggle } from 'hooks/usePasswordToggle';\n\nimport { Button } from 'components/Button/Button';\nimport { Logo } from 'components/Logo/Logo';\nimport { FormError } from 'components/FormError/FormError';\nimport { TogglePasswordIcon } from 'components/TogglePasswordVisibility/TogglePasswordVisibility';\n\nimport {\n  EmailIcon,\n  FieldStyled,\n  FormStyled,\n  PasswordlIcon,\n  WrapperButton,\n  WrapperField,\n  WrapperForm,\n  WrapperIcon,\n  WrapperIcon2,\n  WrapperIcon3,\n} from './LoginForm.styled';\nimport { logInThunk } from 'redux/authOperations';\n\nexport const LoginForm = () => {\n  const { showPasswords, togglePasswordVisibility } = usePasswordToggle([\n    'password1',\n    'password2',\n  ]);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(logInThunk(value))\n      .unwrap()\n      .then(data => {\n        resetForm();\n        toast.success(\n          `Well done  ${data.user.username}! You have signed in successfully.`\n        );\n      })\n      .catch(error => {\n        toast.error(error.message);\n      });\n  };\n\n  return (\n    <WrapperForm>\n      <Logo />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormStyled>\n          <WrapperField>\n            <WrapperIcon>\n              <FieldStyled\n                type=\"email\"\n                name=\"email\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"E-mail\"\n                autoComplete=\"off\"\n                required\n              />\n              <EmailIcon />\n            </WrapperIcon>\n            <FormError name=\"email\" />\n            <WrapperIcon3>\n              <WrapperIcon2>\n                <FieldStyled\n                  type={showPasswords.password1 ? 'text' : 'password'}\n                  name=\"password\"\n                  title=\"Enter the password more difficult, letter, digit, capital letter.\"\n                  placeholder=\"Password\"\n                  autoComplete=\"off\"\n                  required\n                />\n                <PasswordlIcon />\n              </WrapperIcon2>\n              <TogglePasswordIcon\n                showPassword={showPasswords.password1}\n                onToggle={() => togglePasswordVisibility('password1')}\n              />\n            </WrapperIcon3>\n            <FormError name=\"password\" />\n          </WrapperField>\n          <WrapperButton>\n            <Link to=\"/home\">\n              <Button type=\"submit\" text=\"log in\" />\n            </Link>\n            <Link to=\"/register\">\n              <Button text=\"register\" variant=\"secondary\" />\n            </Link>\n          </WrapperButton>\n        </FormStyled>\n      </Formik>\n    </WrapperForm>\n  );\n};\n","import styled from 'styled-components';\nimport bgImage from 'assets/images/bgLoginPage.png';\nimport mobileLoginBack from 'assets/images/mobileLoginBack.png';\n\nexport const BgImage = styled.div`\n  max-width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-position: center;\n  background-repeat: no-repeat;\n\n  background: #302e32;\n\n  background-size: cover;\n  background-image: url(${mobileLoginBack});\n  @media (min-width: 768px) {\n    background-image: url(${bgImage});\n  }\n`;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { BgImage } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <BgImage>\n      <LoginForm />\n    </BgImage>\n  );\n};\n\nexport default Login;\n"],"names":["ButtonStyled","styled","theme","spacing","colors","btnGradient","radii","button","shadows","secondary","primaryFont","fonts","regular","transitions","variant","css","btnVioletText","btnWhiteBg","borders","normal","blue","Button","onClick","text","type","FormError","name","render","message","WrapperForm","primary","FormStyled","Form","WrapperField","FieldStyled","Field","WrapperButton","EmailIcon","IoMdMail","WrapperIcon","WrapperIcon2","PasswordlIcon","IoMdLock","WrapperIcon3","FaEye","FaEyeSlash","WrapperLogo","TitleLogo","Logo","src","moneyGuardLogo","alt","TogglePasswordIcon","showPassword","onToggle","className","usePasswordToggle","fields","initialState","reduce","acc","field","useState","showPasswords","setShowPasswords","togglePasswordVisibility","prevState","loginSchema","yup","shape","email","test","value","trim","required","max","password","min","matches","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","logInThunk","unwrap","then","data","toast","user","username","catch","error","title","placeholder","autoComplete","password1","to","BgImage","mobileLoginBack","bgImage"],"sourceRoot":""}